services:
  pvo-backend:
    container_name: pvo-backend
    build: ./pvo-backend
    depends_on: 
        - pvo-db
    command: npm run dev
    ports:
        - "3000:3000"
    volumes:
        - ./pvo-backend/public/:/pvo-backend/public/
        - ./pvo-backend/src/:/pvo-backend/src/
        - backend-modules:/pvo-backend/node_modules
  pvo-frontend:
    container_name: pvo-frontend
    build: ./pvo-frontend
    # depends_on: 
    #     - pvo-db
    command: npm run start
    ports:
        - "80:3000"
    volumes:
        - ./pvo-frontend/public/:/pvo-frontend/public
        - ./pvo-frontend/src/:/pvo-frontend/src
        - frontend-modules:/pvo-frontend/node_modules
  pvo-db:
    container_name: pvo-db
    image: postgres:latest
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: vacations
      PGDATA: "/var/lib/postgresql/data/pgdata"
    volumes:
      # copy the sql script to create tables
      - ./init_db/create_db.sql:/docker-entrypoint-initdb.d/create_db.sql
      # copy the sql script to fill tables
      # - ./sql/fill_db.sql:/docker-entrypoint-initdb.d/fill_tables.sql
      - pvo-data:/var/lib/postgresql/data
volumes:
  pvo-data:
  frontend-modules:
  backend-modules: